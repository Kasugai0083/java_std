package com.example.sample1app;

import java.io.IOException;
import java.io.Writer;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.samskivert.mustache.Mustache.Lambda;


@Controller
public class HelloController {
//	@RequestMapping("/{num}")
//	public String index(@PathVariable int num, Model model) {
//		
//		int res = 0;
//		for(int i = 1; i <= num; i++) {
//			res += i;
//		}
//		
//		model.addAttribute("msg", "total:" + res);
//		return "index";
//		
//	}
	
//	public ModelAndView index(@PathVariable int num, ModelAndView mav) {
//		
//		int total = 0;
//		for(int i = 1; i <= num; i++) {
//			total += i;
//		}
//		
//		mav.addObject("msg", num + "までの合計を計算します。");
//		
//		mav.addObject("content", "total:" + total);
//		mav.setViewName("index");
//		return mav;
//	}
	
//    /**
//     * GETリクエスト ("/") を処理するメソッド
//     * - フォームの初期画面を表示する
//     * - "msg" に「名前を書いてください」というメッセージを設定
//     * - `index.html`（Thymeleaf テンプレート）を表示
//     * 
//     * @param mav ModelAndView オブジェクト（View へのデータを設定）
//     * @return ModelAndView（ビュー名とモデルデータを含む）
//     */
//    @RequestMapping(value = "/", method = RequestMethod.GET)
//    public ModelAndView index(ModelAndView mav) {
//        // 初期メッセージを設定
//        mav.addObject("msg", "名前を書いてください");
//        
//        // index.html を表示
//        mav.setViewName("index");
//        return mav;
//    }
//
//    /**
//     * POSTリクエスト ("/") を処理するメソッド
//     * - フォームから送信されたデータを受け取る
//     * - `@RequestParam("text1")` でフォームの `name="text1"` の値を取得
//     * - "msg" に「こんにちは、◯◯さん！」というメッセージを設定
//     * - "value" に入力値を設定（フォームの再表示時に入力値を保持するため）
//     * - `index.html`（Thymeleaf テンプレート）を表示
//     *
//     * @param str フォームの入力値
//     * @param mav ModelAndView オブジェクト
//     * @return ModelAndView（ビュー名とモデルデータを含む）
//     */
//    @RequestMapping(value = "/", method = RequestMethod.POST)
//    public ModelAndView form(@RequestParam("text1") String str, ModelAndView mav) {
//        // 送信された名前をメッセージに設定
//        mav.addObject("msg", "こんにちは、" + str + "さん！");
//        
//        // 入力値を保存（フォーム再表示時の保持用）
//        mav.addObject("value", str);
//        
//        // index.html を表示
//        mav.setViewName("index");
//        return mav;
//    }
	
//	@RequestMapping(value="/", method=RequestMethod.GET)
//	public ModelAndView index(ModelAndView mav) {
//		mav.setViewName("index");
//		mav.addObject("msg","フォームを送信ください。");
//		return mav;
//	}
//	
//	@RequestMapping(value="/", method=RequestMethod.POST)
//	public ModelAndView form(
//			@RequestParam(value="check1",required=false)boolean check1,
//			@RequestParam(value="radio1",required=false)String radio1,
//			@RequestParam(value="select1",required=false)String select1,
//			@RequestParam(value="select2",required=false)String[] select2,
//			ModelAndView mav
//			) {
//		String res = "";
//		try {
//			res = "check:" + check1 +
//					" radio:" + radio1 +
//					" select:" + select1 +
//					"\nselect2:";
//		}catch(NullPointerException e) {}
//		try {
//			res += select2[0];
//			for(int i = 1; i < select2.length; i++) {
//				res += "," + select2[i];
//			}
//		}catch(NullPointerException e) {
//			res += null;
//		}
//		
//		
//		mav.addObject("msg",res);
//		mav.setViewName("index");
//		return mav;
//		
//	}
	
//	@RequestMapping(value="/", method=RequestMethod.GET)
//	public ModelAndView index(ModelAndView mav) {
//		mav.setViewName("index");
//		mav.addObject("msg","HelloController/indexのページです。");
//		return mav;
//	}
//	
//	@RequestMapping("/other")
//	public String other() {
//		return "redirect:/";
//	}
//	
//	@RequestMapping("/home")
//	public String home() {
//		return "forward:/";
//	}
	
//	private boolean flag = false;
//	
//	@RequestMapping("/")
//	public ModelAndView index(ModelAndView mav) {
//		flag = !flag;
//		mav.setViewName("index");
//		mav.addObject("flag",flag);
//		mav.addObject("msg", "サンプルのメッセージです。");
//		return mav;
//	}
	
//	
//	@RequestMapping("/")
//	public ModelAndView index(ModelAndView mav) {
//		mav.setViewName("index");
//		mav.addObject("msg","データを表示します。");
//		String[] data = new String[] {"One", "Two", "Three"};
//		mav.addObject("data",data);
//		return mav;
//	}
//	
//	
//	@RequestMapping("/{month}")
//	public ModelAndView index(@PathVariable int month, ModelAndView mav) {
//		
//		mav.setViewName("index");
//		mav.addObject("msg", month + "月は？");
//		mav.addObject("month",month);
//		return mav;
//		
//	}
	
//	@RequestMapping("/")
//	public ModelAndView index(ModelAndView mav) {
//		mav.setViewName("index");
//		mav.addObject("msg","メッセージだよ。");
//		return mav;
//	}

	
//	@RequestMapping("/")
//	public ModelAndView index(ModelAndView mav) {
//		mav.setViewName("index");
//		String msg = """
//				
//				<div>
//					<h2>Message</h2>
//					<p>This is sample message!</p>
//				</div>
//				
//				""";
//		mav.addObject("msg",msg);
//		return mav;
//	}
	
//	private boolean flag = false;
//	
//	@RequestMapping("/")
//	public ModelAndView index(ModelAndView mav) {
//		mav.setViewName("index");
//		flag = !flag;
//		mav.addObject("flag", flag);
//		mav.addObject("msg", "メッセージを表示します。");
//		return mav;
//	}
//	
	
//	@RequestMapping("/")
//	public ModelAndView index(ModelAndView mav) {
//		mav.setViewName("index");
//		MyData[] data = new MyData[] {
//			new MyData("Taro", 39),
//			new MyData("Hanako", 28),
//			new MyData("Sachiko", 17)
//		};
//		
//		mav.addObject("data",data);
//		return mav;
//		
//	}
//	
//	class MyData{
//		public String name;
//		public int age;
//		
//		public MyData(String name, int age) {
//			this.name = name;
//			this.age = age;
//		}
//		public String toString() {
//			return String.format("{Name: %s, age: %s}",name,age);
//		}
//	}
	
	@RequestMapping("/")
	public ModelAndView index(ModelAndView mav) {
		mav.setViewName("index");
		mav.addObject("title","ラムダ式のサンプル");
		mav.addObject("msg", "これはラムダ式を利用してメッセージを表示したものです。");
		
		Lambda fn = new Lambda() {
			public void execute(Fragment frag,Writer out) throws IOException{
				out.write("<div class=\"alert alert-primary\"></div>");
				frag.execute(out);
				out.write("</div>");
			}			
		};
		
		mav.addObject("fn",fn);
		return mav;
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
